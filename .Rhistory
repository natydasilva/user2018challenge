# Libraries
library(tidyverse)
library(ALA4R)
library(RColorBrewer)
library(ggthemes)
install.packages("ggthemes")
library(data.table)
library(ggthemes)
library(ochRe)
install.packages("ochRe")
#read all the plants data from https://downloads.ala.org.au
plants <- fread("Plants-brief.csv")
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.delim)
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.delim)
plants_sub <- read_csv("plant_sub.csv")
View(plants_sub)
load("aus_map.Rda")
map <- aus_map %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), alpha = 1/3) +
theme_bw() + coord_map() + theme_map()
pl_plant <- function(pl, y ="all"){
if(y == "all"){
plants <- plants_sub %>% filter(grepl(pl, scientificName))
map + geom_point(data = plants, aes(x = longitudeOriginal, y = latitudeOriginal), colour="orange")
}else{
plants <- plants_sub %>% filter(grepl(pl, scientificName), year == y )
map + geom_point(data = plants, aes(x = longitudeOriginal, y = latitudeOriginal), colour="orange")
}
}
pl_plant("Triodia", y = 2016)
pl_plant("Brachychiton")
shiny::runApp()
install.packages("gganimate")
devtools::install_github("dgrtwo/gganimate")
# Animated example
library(gganimate)
install.packages("ggplot2")
library(gganimate)
library(ggplot2)
library(gganimate)
devtools::install_github("dgrtwo/gganimate")
library(gganimate)
shiny::runApp()
install.packages("ggthemes")
runApp()
shiny::runApp()
plants_sub <- read_csv("plant_sub.csv")
runApp()
plants_small <- plants_sub %>% head(n=20)
View(plants_small)
colnames(plants_small)
#Descriptives
datosDesc <- plants_sub %>% group_by(state, year) %>%
drop_na() %>%
filter(state != "") %>% filter(year > 1990) %>%
mutate(precipitationAnnual = mean(precipitationAnnual, na.rm = TRUE),
temperatureAnnualMaxMean = mean(temperatureAnnualMaxMean, na.rm = TRUE))
plants_sub %>% group_by(state, year) %>%
drop_na() %>%
filter(state != "")
df <- tibble(x = c(1, 2, NA), y = c("a", NA, "b"))
df
df %>% drop_na()
df %>% drop_na(x)
rm(df)
#Descriptives
datosDesc <- plants_sub %>% group_by(state, year) %>%
filter(state != "") %>% filter(year > 1990) %>%
mutate(precipitationAnnual = mean(precipitationAnnual, na.rm = TRUE),
temperatureAnnualMaxMean = mean(temperatureAnnualMaxMean, na.rm = TRUE))
View(datosDesc)
ggplot(data = datosDesc, aes(x = year, y= precipitationAnnual)) +
geom_line() + geom_point() +
facet_wrap(~state)
runApp()
runApp()
runApp()
runApp()
runApp()
red_map <- aus_map[sample(1:nrow(aus_map), 100 ),]
mapita <- aus_map %>%
ggplot() +
geom_polygon(aes(long, lat, group = group), alpha = 1/3) +
theme_bw() + coord_map() + theme_map()
#Select a plant to see the evolution over the years
plants_each <- plants_sub %>% filter(grepl("Callitris", scientificName)) %>%
filter(year > 1990) %>%select(longitudeOriginal, latitudeOriginal, year)
#can include the map
mapani <-  ggplot(data = plants_each,  aes(x = longitudeOriginal, y = latitudeOriginal, frame = year )) +
geom_point( colour = "orange")
gganimate(mapani)
library(magick)
gganimate(mapani)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
plants_sub <- read_csv("plant_sub.csv")
runApp()
runApp()
runApp()
runApp()
100*61930/258784
runApp()
runApp()
env_layers <- c("Precipitation - summer reliability",
"Precipitation - winter reliability",
"Precipitation - autumn reliability",
"Precipitation - spring reliability",
"Precipitation - summer",
"Precipitation - winter",
"Precipitation - autumn",
"Precipitation - spring",
"Precipitation - annual",
"Temperature - annual max mean")
# can not select more than one taxon at the same time
triodia <- occurrences(taxon = "triodia", qa = "none",
download_reason_id = "testing", extra = env_layers)$data %>% mutate(plant ="Triodia")
View(triodia)
brachychiton <- occurrences(taxon = "brachychiton", qa = "none",
download_reason_id = "testing",extra = env_layers)$data %>% mutate(plant ="Brachychiton")
flindersia <- occurrences(taxon = "flindersia", qa = "none",
download_reason_id = "testing",extra = env_layers)$data %>% mutate(plant ="Flindersia")
livistona <- occurrences(taxon = "livistona", qa = "none",
download_reason_id = "testing",extra=env_layers)$data %>% mutate(plant ="Livistona")
callitris <- occurrences(taxon = "callitris", qa = "none",
download_reason_id = "testing",extra=env_layers)$data %>% mutate(plant ="Callitris")
daviesia <- occurrences(taxon = "daviesia", qa = "none",
download_reason_id = "testing", extra=env_layers)$data %>% mutate(plant ="Daviesia")
ficus <- occurrences(taxon = "ficus", qa = "none",
download_reason_id = "testing", extra=env_layers)$data %>% mutate(plant ="Ficus")
hakea <- occurrences(taxon = "hakea", qa = "none",
download_reason_id = "testing",extra=env_layers)$data %>% mutate(plant ="Hakea")
datos <- rbind(triodia, brachychiton, flindersia, livistona,
callitris, daviesia, ficus, hakea) %>%  dplyr::filter(rank %in%
c("species", "subspecies", "variety", "form", "cultivar"))
write.csv(datos, file="datos.csv")
datostop <- head(datos, n = 20)
View(datostop)
View(datos)
datostop <- datos %>% filter(!is.na(precipitationAutumn)) %>% head(datos, n = 20)
colnames(datostop)
runApp()
library(scales)
datosPrep <- datos %>%  select(state, year, month, 44:54)
View(datosPrep)
datosPrep <- datos %>%  select(state, year, month, 44:54) %>%
group_by(state, year) %>%
filter(state!="") %>%
filter(year>1990)
View(datosPrep)
datosPrep <- datos %>%  select(state, year, month, 44:54) %>%
group_by(state, year) %>%
filter(state!="") %>%
filter(year>1990)
ggplot(data = datosPrep, aes(x = year, y = precipitationSpringReliability)) +
geom_line() + geom_point() + facet_wrap(~state)
datos %>%  select(state, year, month, 44:54) %>%
group_by(state, year) %>%
filter(state!="") %>%
filter(year>1990) %>% ggplot(aes(x = year, y = precipitationSpringReliability)) +
geom_line() + geom_point() + facet_wrap(~state)
datos %>%  select(state, year,44:54) %>%
group_by(state, year) %>%
filter(state!="") %>%
filter(year>1990) %>% ggplot(aes(x = year, y = precipitationSpringReliability)) +
geom_line() + geom_point() + facet_wrap(~state)
plants_each <- datos %>% filter(grepl("Callitris", scientificName)) %>%
filter(year > 1990) %>%
select(longitudeOriginal, latitudeOriginal, year, precipitationSummer)
mapani <-  ggplot(data = plants_each,  aes(x = longitudeOriginal, y = latitudeOriginal, size = precipitationSummer, frame = year )) +
geom_point( )
mapani
gganimate(mapani)
install.packages("magick")
library(magick)
gganimate(mapani)
runApp()
